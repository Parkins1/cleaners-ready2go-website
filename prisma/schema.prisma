// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String    @id @default(cuid())
  email     String    @unique
  name      String?
  role      Role      @default(CUSTOMER)
  bookings  Booking[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Service {
  id          String    @id @default(cuid())
  name        String
  description String?
  price       Float
  duration    Int      // in minutes
  icon        String?  // path to icon
  bookings    Booking[]
  addOns      AddOn[]
  createdAt   DateTime  @default(now())
}

model AddOn {
  id          String    @id @default(cuid())
  name        String
  description String?
  price       Float
  serviceId   String
  service     Service   @relation(fields: [serviceId], references: [id])
  bookings    BookingAddOn[]
  createdAt   DateTime  @default(now())
}

model Booking {
  id          String    @id @default(cuid())
  userId      String
  serviceId   String
  date        DateTime
  status      BookingStatus @default(PENDING)
  totalPrice  Float
  notes       String?
  user        User      @relation(fields: [userId], references: [id])
  service     Service   @relation(fields: [serviceId], references: [id])
  addOns      BookingAddOn[]
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model BookingAddOn {
  id        String   @id @default(cuid())
  bookingId String
  addOnId   String
  booking   Booking   @relation(fields: [bookingId], references: [id])
  addOn     AddOn     @relation(fields: [addOnId], references: [id])
}

enum Role {
  CUSTOMER
  ADMIN
}

enum BookingStatus {
  PENDING
  CONFIRMED
  COMPLETED
  CANCELLED
}